/**
 * Autogenerated by really, really eager small hamsters.
*/

using System.Diagnostics;
using Deckster.Client.Communication;
using Deckster.Client.Protocol;
using Deckster.Client.Games.Common;
namespace Deckster.Client.Games.ChatRoom;

[DebuggerDisplay("ChatClient {PlayerData}")]
public class ChatGeneratedClient : GameClient
{
    public event Action<ChatNotification>? PlayerSaid;

    public ChatGeneratedClient(IClientChannel channel) : base(channel){}

    public Task<ChatResponse> ChatAsync(SendChatRequest request, CancellationToken cancellationToken = default)
    {
        return SendAsync<ChatResponse>(request, cancellationToken);
    }

    protected override void OnNotification(DecksterNotification notification)
    {
        try
        {
            switch (notification)
            {
                case ChatNotification m:
                    PlayerSaid?.Invoke(m);
                    return;
                default:
                    return;
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}
