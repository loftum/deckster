using Deckster.Core.Games.CrazyEights;
using System.Diagnostics;
using Deckster.Client.Communication;
using Deckster.Core.Protocol;
using Deckster.Core.Games.Common;
using Deckster.Core.Games.CrazyEightsGame;

namespace Deckster.Client.Games.CrazyEights;

/**
 * Autogenerated by really, really eager small hamsters.
*/

[DebuggerDisplay("CrazyEightsGameClient {PlayerData}")]
public class CrazyEightsGameGeneratedClient(IClientChannel channel) : GameClient(channel)
{
    public event Action<GameStartedNotification>? GameStarted;
    public event Action<PlayerDrewCardNotification>? PlayerDrewCard;
    public event Action<ItsYourTurnNotification>? ItsYourTurn;
    public event Action<PlayerPassedNotification>? PlayerPassed;
    public event Action<PlayerPutCardNotification>? PlayerPutCard;
    public event Action<GameEndedNotification>? GameEnded;
    public event Action<PlayerIsDoneNotification>? PlayerIsDone;

    protected override void OnNotification(DecksterNotification notification)
    {
        try
        {
            switch (notification)
            {
                case GameStartedNotification m:
                    GameStarted?.Invoke(m);
                    return;
                case PlayerDrewCardNotification m:
                    PlayerDrewCard?.Invoke(m);
                    return;
                case ItsYourTurnNotification m:
                    ItsYourTurn?.Invoke(m);
                    return;
                case PlayerPassedNotification m:
                    PlayerPassed?.Invoke(m);
                    return;
                case PlayerPutCardNotification m:
                    PlayerPutCard?.Invoke(m);
                    return;
                case GameEndedNotification m:
                    GameEnded?.Invoke(m);
                    return;
                case PlayerIsDoneNotification m:
                    PlayerIsDone?.Invoke(m);
                    return;
                default:
                    return;
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }
}

public static class CrazyEightsGameGeneratedClientDecksterClientExtensions
{
    public static GameApi<CrazyEightsGameGeneratedClient> CrazyEightsGame(this DecksterClient client)
    {
        return new GameApi<CrazyEightsGameGeneratedClient>(client.BaseUri.Append("crazyeightsgame"), client.Token, c => new CrazyEightsGameGeneratedClient(c));
    }
}
